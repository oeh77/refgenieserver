{
	"info": {
		"_postman_id": "100f4ef0-cb8a-47b4-8e49-e02f2789e0ca",
		"name": "refgenieserver",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get_all_genomes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"const jsonData = pm.response.json();",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(jsonData).to.be.an(\"array\");",
							"});",
							"pm.variables.set(\"genome\", jsonData[0])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{urlBase}}/v3/genomes",
					"protocol": "http",
					"host": [
						"{{urlBase}}"
					],
					"path": [
						"v3",
						"genomes"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_genomes_by_asset",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"asset\", \"fasta\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{urlBase}}/v3/genomes/{{asset}}",
					"protocol": "http",
					"host": [
						"{{urlBase}}"
					],
					"path": [
						"v3",
						"genomes",
						"{{asset}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_genome_alias_digest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = pm.response.json();",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(jsonData).to.be.a(\"string\");",
							"});",
							"pm.variables.set(\"genomeDigest\", jsonData)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{urlBase}}/v3/alias/genome_digest/{{genome}}",
					"protocol": "http",
					"host": [
						"{{urlBase}}"
					],
					"path": [
						"v3",
						"alias",
						"genome_digest",
						"{{genome}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_genome_alias",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(jsonData).to.be.an(\"array\");",
							"});",
							"",
							"pm.test(\"Test data value\", () => {",
							"  var testVal = pm.variables.get(\"genome\")",
							"  pm.expect(jsonData[0]).to.equal(testVal);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{urlBase}}/v3/alias/alias/{{genomeDigest}}",
					"protocol": "http",
					"host": [
						"{{urlBase}}"
					],
					"path": [
						"v3",
						"alias",
						"alias",
						"{{genomeDigest}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_default_tag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = pm.response.json();",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(jsonData).to.be.a(\"string\");",
							"});",
							"pm.variables.set(\"defaultTag\", jsonData)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{urlBase}}/v3/asset/{{genomeDigest}}/{{asset}}/default_tag",
					"protocol": "http",
					"host": [
						"{{urlBase}}"
					],
					"path": [
						"v3",
						"asset",
						"{{genomeDigest}}",
						"{{asset}}",
						"default_tag"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_assset_digest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = pm.response.json();",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(jsonData).to.be.a(\"string\");",
							"});",
							"pm.variables.set(\"assetDigest\", jsonData)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{urlBase}}/v3/asset/{{genomeDigest}}/{{asset}}/{{defaultTag}}/asset_digest",
					"protocol": "http",
					"host": [
						"{{urlBase}}"
					],
					"path": [
						"v3",
						"asset",
						"{{genomeDigest}}",
						"{{asset}}",
						"{{defaultTag}}",
						"asset_digest"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_archive_digest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = pm.response.json();",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(jsonData).to.be.a(\"string\");",
							"});",
							"pm.variables.set(\"archiveDigest\", jsonData)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{urlBase}}/v3/asset/{{genomeDigest}}/{{asset}}/{{defaultTag}}/archive_digest",
					"protocol": "http",
					"host": [
						"{{urlBase}}"
					],
					"path": [
						"v3",
						"asset",
						"{{genomeDigest}}",
						"{{asset}}",
						"{{defaultTag}}",
						"archive_digest"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_asset_attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = pm.response.json();",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(jsonData).to.be.a(\"object\");",
							"});",
							"",
							"pm.test(\"Test data value\", () => {",
							"  var archiveDigest = pm.variables.get(\"archiveDigest\", jsonData)",
							"  var assetDigest = pm.variables.get(\"assetDigest\", jsonData)",
							"  pm.expect(jsonData[\"asset_digest\"]).to.equal(assetDigest);",
							"  pm.expect(jsonData[\"archive_digest\"]).to.equal(archiveDigest);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{urlBase}}/v3/asset/{{genomeDigest}}/{{asset}}?tag={{defaultTag}}",
					"protocol": "http",
					"host": [
						"{{urlBase}}"
					],
					"path": [
						"v3",
						"asset",
						"{{genomeDigest}}",
						"{{asset}}"
					],
					"query": [
						{
							"key": "tag",
							"value": "{{defaultTag}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_asset_archive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{urlBase}}/v3/asset/{{genomeDigest}}/{{asset}}/archive?tag={{defaultTag}}",
					"protocol": "http",
					"host": [
						"{{urlBase}}"
					],
					"path": [
						"v3",
						"asset",
						"{{genomeDigest}}",
						"{{asset}}",
						"archive"
					],
					"query": [
						{
							"key": "tag",
							"value": "{{defaultTag}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_asset_log",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{urlBase}}/v3/asset/{{genomeDigest}}/{{asset}}/log?tag={{defaultTag}}",
					"protocol": "http",
					"host": [
						"{{urlBase}}"
					],
					"path": [
						"v3",
						"asset",
						"{{genomeDigest}}",
						"{{asset}}",
						"log"
					],
					"query": [
						{
							"key": "tag",
							"value": "{{defaultTag}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_asset_recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{urlBase}}/v3/asset/{{genomeDigest}}/{{asset}}/recipe?tag={{defaultTag}}",
					"protocol": "http",
					"host": [
						"{{urlBase}}"
					],
					"path": [
						"v3",
						"asset",
						"{{genomeDigest}}",
						"{{asset}}",
						"recipe"
					],
					"query": [
						{
							"key": "tag",
							"value": "{{defaultTag}}"
						}
					]
				}
			},
			"response": []
		}
	]
}